{
  "$schema": "purs-lint.schema.json",
  "verbosity": "Brief",
  "indentSpaces": 2,
  "projectRoots": [
    {
      "pathPrefix": "src",
      "modulePrefix": ""
    }
  ],
  "ruleSets": [
    {
      "globs": [
        "./src/**/*.purs"
      ],
      "rules": {
        "AlignedParenthesis": null,
        "Application.InArray.IndentArguments": null,
        "Application.InRecord.IndentArguments": null,
        "ArrayFormatting": null,
        "IfThenElse.LeftAligned": null,
        "ModuleImports.RequireQualification": [
          {
            "import": "fromFoldable|toUnfoldable|fromString|singleton|member|over|set|get",
            "module": "Data.Array.NonEmpty",
            "qualifyAs": "NonEmptyArray"
          },
          {
            "import": "fromFoldable|toUnfoldable|fromString|singleton|member|over|set|get",
            "module": "^Data.(Array|Either|Lens|List|List.Lazy|Map|Maybe|Set)$",
            "qualifyAs": "$1"
          }
        ],
        "NoDuplicateTypeclassConstraints": null,
        "NoUnnecessaryDo": null,
        "NoUnnecessaryParenthesis": null,
        "RecordFormatting": null,
        "Monoid.ReplaceMaybeMemptyWithFoldMap": null,
        "UseAnonymous.BinaryOperations": [
          ">",
          ">=",
          "<",
          "<=",
          "<>"
        ],
        "UseAnonymous.RecordCreation": null,
        "UseAnonymous.RecordUpdates": null,
        "Monoid.ReplaceRepeatedMappendsWithFold": null,
        "Monoid.ReplaceIfThenElseMEmptyWithGuard": null,
        "Monoid.ReplaceIfthenMEmptyElseWithGuard": null,
        "UsePunning": null
      }
    }
  ]
}
